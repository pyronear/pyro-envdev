version: '3.7'

services:
  web:
    image: localhost:5000/myapp:latest #Todo change for have the offical pyro-api image on docker hub
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 5000 #if the port if edited, please inject a new nginx.conf config in the reverseproxy
    volumes:
      - ./src/:/usr/src/app/
    environment:
      - DATABASE_URL=postgresql://pyro_api:pyro_api@db/pyro_api_dev #todo fill here the  real  values from the vault/env
      - TEST_DATABASE_URL=postgresql://pyro_api_test:pyro_api_test@test_db/pyro_api_dev_test #todo fill here the real values from the vault/env
      - SUPERUSER_LOGIN=superuser #todo fill here the  real  values from the vault/env
      - SUPERUSER_PWD=superuser #todo fill here the  real  values from the vault/env
      - QARNOT_TOKEN=${QARNOT_TOKEN}
      - BUCKET_NAME=${BUCKET_NAME}
      - BUCKET_MEDIA_FOLDER=${BUCKET_MEDIA_FOLDER}
    deploy:
      resources: #todo increase the limit if needed
          limits:
            cpus: '0.60'
            memory: 100M
          reservations:
            cpus: '0.50'
            memory: 40M
      replicas: 15 # for some load balancing
      restart_policy:
        max_attempts: 3
        condition: on-failure
      update_config:
        parallelism: 3
        delay: 10s
    networks:
      - balance
    cap_drop:
      - ALL #limit the permission of the service
  db:
    image: postgres:12.1-alpine 
    volumes:
      - postgres_data:/var/lib/postgresql/data/ #for data persistence
    environment:
      - POSTGRES_USER=pyro_api #todo fill here the  real  values from the vault/env
      - POSTGRES_PASSWORD=pyro_api #todo fill here the  real  values from the vault/env
      - POSTGRES_DB=pyro_api_dev #todo fill here the  real  values from the vault/env
    networks:
      - balance

  proxytwo:
    image: localhost:5000/mynginx:latest #nginx with some security addition
    ports:
      - 80:6000 #todo use https (port 443) when the certificate is ready
    depends_on:
      - web 
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - balance

networks:
  balance:
    driver: overlay

volumes:
  postgres_data:




