version: '3.7'

services:
  pyro_api:
    image: pyronear/pyro-api:latest
    restart: always
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    ports:
    - 8080:8080
    environment:
    - DEBUG=true
    - DATABASE_URL=postgresql://dummy_pg_user:dummy_pg_pwd@db/dummy_pg_db
    - SQLALCHEMY_SILENCE_UBER_WARNING=1
    - SUPERUSER_LOGIN=${SUPERUSER_LOGIN}
    - SUPERUSER_PWD=${SUPERUSER_PWD}
    - BUCKET_NAME=sample-bucket
    - S3_ENDPOINT_URL=http://s3.localhost.localstack.cloud:4566
    - S3_ACCESS_KEY=fake
    - S3_SECRET_KEY=fake
    - S3_REGION=us-east-1
    - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    - TELEGRAM_TEST_CHAT_ID=${TELEGRAM_TEST_CHAT_ID}
    healthcheck:
      test: ["CMD-SHELL", "curl -X 'GET' 'http://pyro_api:8080/status' -H 'accept: application/json'"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
  db:
    image: postgres:15-alpine
    expose:
    - 5432
    environment:
    - POSTGRES_USER=dummy_pg_user
    - POSTGRES_PASSWORD=dummy_pg_pwd
    - POSTGRES_DB=dummy_pg_db
    healthcheck:
      test: [CMD-SHELL, sh -c 'pg_isready -U dummy_pg_user -d dummy_pg_db']
      interval: 10s
      timeout: 10s
      retries: 5
  # ref link: https://github.com/localstack/localstack/blob/master/docker-compose.yml
  localstack:
    image: localstack/localstack:1.4.0
    ports:
    - 4566:4566
    # environment variables details: https://docs.localstack.cloud/references/configuration/
    environment:
    - EDGE_PORT=4566
    - SERVICES=s3
    healthcheck:
      test: ["CMD-SHELL", "awslocal --endpoint-url=http://localhost:4566 s3 ls"]
      interval: 10s
      timeout: 10s
      retries: 5
  pyro_engine:
    image: pyronear/pyro-engine:latest
    environment:
    - API_URL=${API_URL}
    - LAT=${LAT}
    - LON=${LON}
    - CAM_USER=${CAM_USER}
    - CAM_PWD=${CAM_PWD}
    command: python run.py
    volumes:
    - ./data:/usr/src/app/data
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '5'
    depends_on:
      pyro_api:
        condition: service_healthy
      reolink_dev:
        condition: service_healthy
  promtail:
    image: grafana/promtail:2.7.3
    ports:
    - 8300:8300
    volumes:
    - /var/log:/var/log
    - ./promtail/config.yml:/etc/promtail/config.yml
    - /var/lib/docker/containers:/var/lib/docker/containers
    env_file:
    - .env
    command: -config.file=/etc/promtail/config.yml -config.expand-env=true
    restart: always
  init_script:
    build:
      context: .
      dockerfile: Dockerfile.init
    environment:
    - API_URL=${API_URL}
    - SUPERUSER_LOGIN=${SUPERUSER_LOGIN}
    - SUPERUSER_PWD=${SUPERUSER_PWD}
    volumes:
    - ./data/:/data/
    command: sh -c 'python /usr/local/bin/init_script.py && exit 0 || exit 1'
    depends_on:
      pyro_api:
        condition: service_healthy
  reolink_dev:
    image: reolink:latest
    environment:
    - CAM_USER=${CAM_USER}
    - CAM_PWD=${CAM_PWD}
    ports:
      - "443:443"
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD-SHELL", "curl -X 'GET' -k 'https://reolink_dev/health'"]
      interval: 10s
      timeout: 10s
      retries: 5
